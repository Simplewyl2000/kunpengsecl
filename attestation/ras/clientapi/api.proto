syntax = "proto3";

option go_package = "gitee.com/openeuler/kunpengsecl/attestation/ras/clientapi";

service Ras {
  rpc CreateIKCert (CreateIKCertRequest) returns (CreateIKCertReply) {}
  rpc GenerateEKCert(GenerateEKCertRequest) returns (GenerateEKCertReply) {}
  rpc RegisterClient (RegisterClientRequest) returns (RegisterClientReply) {}
  rpc UnregisterClient (UnregisterClientRequest) returns (UnregisterClientReply) {}
  rpc SendHeartbeat (SendHeartbeatRequest) returns (SendHeartbeatReply) {}
  rpc SendReport (SendReportRequest) returns (SendReportReply) {}
}

message CreateIKCertRequest {
  string ekCert = 1;
  string ikPub = 2;
  bytes ikName = 3;
}

message CreateIKCertReply {
  bytes EncryptedIC = 1;
  bytes CredBlob = 2;
  bytes EncryptedSecret = 3;
  string EncryptAlg = 4;
  bytes EncryptParam = 5;
}

message RegisterClientRequest {
  Cert ic = 1;
  ClientInfo clientInfo = 2;
}

message Cert {
  bytes cert = 1;
}

message ClientInfo {
  string clientInfo = 1;
}

message RegisterClientReply {
  int64 clientId = 1;
  ClientConfig clientConfig = 2;
}

message ClientConfig {
  int64 hbDurationSeconds = 1;
  int64 trustDurationSeconds = 2;
  string digestAlgorithm = 3;
}

message UnregisterClientRequest {
  int64 clientId = 1;
}

message UnregisterClientReply {
  bool result = 1;
}

message SendHeartbeatRequest {
  int64 clientId = 1;
}

message GenerateEKCertRequest {
  bytes ekPub = 1;
}

message GenerateEKCertReply {
  bytes ekCert = 1;
}

message SendHeartbeatReply {
  uint64 nextAction = 1;
  ActionParameters actionParameters = 2;
}

message ActionParameters {
  uint64 nonce = 1;
  ClientConfig clientConfig = 2;
}

message SendReportRequest {
  int64 clientId = 1;
  TrustReport trustReport = 2;
}

message TrustReport {
  PcrInfo pcrInfo = 1;
  repeated Manifest manifest = 2;
  int64 clientId = 3;
  ClientInfo clientInfo = 4;
}

message PcrInfo{
  map<int32, string> pcrValues = 1;
  PcrQuote pcrQuote = 2;
  string algorithm = 3;
}

message PcrQuote {
  bytes quoted = 1;
  bytes signature = 2;
}

message Manifest{
  string type = 1;
  bytes item = 2;
}

message SendReportReply {
  bool result = 1;
}

