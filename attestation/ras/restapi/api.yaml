openapi: 3.0.1
info:
  description: KunpengSecL remote attestation server provides RESTful APIs to manage the trust reports and get the trust status of managed target servers.
  title: KunpengSecL Remote Attestation REST API server
  license:
    name: MulanPSL-2.0
    url: http://license.coscl.org.cn/MulanPSL2
  version: 1.0.0
servers:
  - description: KunpengSecL Remote Attestation REST API server
    url: https://localhost
paths:
  /:
    get:
      description: get a list of briefing info for all servers
      responses:
        '200':
          description: return a list of briefing info for all servers
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerInfo'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerInfo'
  /{id}:
    get:
      description: get a specified server's info
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: return a specified server's info
          content:
            text/plain:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/ServerInfo'
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/ServerInfo'
    post:
      description: modify a specified server's info
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: success change a specified server's info
      security:
        - servermgt_oauth2:
          - write:servers
    delete:
      description: delete a specified server
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: success delete a specified server
      security:
        - servermgt_oauth2:
          - write:servers
  /{from}/{to}:
    get:
      description: get a specified list of servers' info
      parameters:
        - name: from
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: to
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: a specified server's info
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerInfo'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerInfo'
  /{id}/reports:
    get:
      description: get a specified server's all reports
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: return a specified server's all reports
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportInfo'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportInfo'
  /{id}/reports/{reportid}:
    get:
      description: get a specified server's specified report
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: reportid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: return a specified server's specified report
          content:
            text/plain:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/ReportInfo'
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/ReportInfo'
    delete:
      description: delete a specified server's specified report
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: reportid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: success delete a specified server's specified report
      security:
        - servermgt_oauth2:
          - write:servers
  /{id}/basevalues:
    get:
      description: get a specified server's all base values
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: return a specified server's all base values
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseValueInfo'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseValueInfo'
    post:
      description: add a new base value to a specified server
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: success add a new base value to a specified server
      security:
        - servermgt_oauth2:
          - write:servers
  /{id}/basevalues/{basevalueid}:
    get:
      description: get a specified server's specified base values
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: basevalueid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: return a specified server's specified base values
          content:
            text/plain:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/BaseValueInfo'
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/BaseValueInfo'
    post:
      description: modify a specified base value to a specified server
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: basevalueid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: success modify a specified base value to a specified server
      security:
        - servermgt_oauth2:
          - write:servers
    delete:
      description: delete a specified server's specified base value
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: basevalueid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: success delete a specified server's specified base value
      security:
        - servermgt_oauth2:
          - write:servers
  /version:
    get:
      description: get the current version of the rest api
      responses:
        '200':
          description: success return a version string
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
  /login:
    post:
      description: login as a admin user
      responses:
        '200':
          description: success login
      security:
        - servermgt_oauth2:
          - write:servers
  /config:
    get:
      description: get the current configuration of ras
      responses:
        '200':
          description: success return the configuration of ras
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
    post:
      description: modify a new configuration of ras
      responses:
        '200':
          description: success modify the new configuration of ras
      security:
        - servermgt_oauth2:
          - write:servers
components:
  schemas:
    ServerInfo:
      type: object
      required:
        - id
        - regtime
        - online
        - trusted
        - info
      properties:
        id:
          type: integer
          format: int64
        regtime:
          type: string
        online:
          type: boolean
          default: false
        trusted:
          type: boolean
          default: false
        info:
          type: string
    ReportInfo:
      type: object
      required:
        - id
        - createtime
        - validated
        - trusted
        - quoted
        - signature
        - pcrlog
        - bioslog
        - imalog
      properties:
        id:
          type: integer
          format: int64
        createtime:
          type: string
        validated:
          type: boolean
          default: false
        trusted:
          type: boolean
          default: false
        quoted:
          type: string
        signature:
          type: string
        pcrlog:
          type: string
        bioslog:
          type: string
        imalog:
          type: string
    BaseValueInfo:
      type: object
      required:
        - id
        - createtime
        - enabled
        - name
        - pcr
        - bios
        - ima
      properties:
        id:
          type: integer
          format: int64
        createtime:
          type: string
        enabled:
          type: boolean
          default: false
        name:
          type: string
        pcr:
          type: string
        bios:
          type: string
        ima:
          type: string
  securitySchemes:
    servermgt_http:
      description: http basic authentication to remote attestation server
      type: http
      scheme: basic
    servermgt_oauth2:
      description: oauth2 authentication to remote attestation server
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: http://localhost:5096/authorization
          tokenUrl: http://localhost:5096/token
          scopes:
            write:servers: modify target server configurations
            read:servers: read server informations
            write:config: modify ras configuration