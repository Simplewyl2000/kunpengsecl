openapi: 3.0.1
info:
  title: KunpengSecL Remote Attestation REST server
  description: KunpengSecL remote attestation server provides RESTful APIs to manage the trust reports and get the trust status of managed target servers.
  version: 1.0.0
Servers:
-url: https://localhost
paths:
  /:
    get:
      summary: return a demo html page
      response:
        '200':
          description: A demo html page
          content:
            text/html:

  /version:
    get:
      summary: Return the version of current API
      response:
        '200':
          description: A version string
          content:
            application/json:
              schema:
                type: string
  /config:
    get:
      summary: Return a list of all config items in key:value pair format
      response:
        '200':
          description: A JSON array of config items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConfigItem'
    post:
      summary: Create a list of config items
      requestBody:
        description: config items to be created or updated
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ConfigItem'
      responses:
        '200':
          description: Given config items created
          content: {}
      security:
      - servermgt_auth:
        - write:config
  /server:
    get:
      summary: Return a list of briefing info for all servers
      response:
        '200':
          description: A JSON array of server briefing info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerBriefInfo'
    put:
      summary: put a list of servers into given status
      requestBody:
        description: servers identified by clientids to be put into given status
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerRegistryStatus'
      responses:
        '200':
          description: Given servers registry status updated
          content: {}
      security:
      - servermgt_auth:
        - write:servers
  /server/basevalue/{serverId}:
    get:
      summary: Return the base value of a given server
      parameters:
      - name: serverId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      response:
        '200':
          description: the base value info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerBaseValue'
    put:
      summary: create/update the base value of the given server
      parameters:
      - name: serverId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: the base value info to be set for given server
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerBaseValue'
      responses:
        '200':
          description: the base value of given server updated
          content: {}
      security:
      - servermgt_auth:
        - write:servers
  /status:
    get:
      summary: Return a list of trust status for all servers
      response:
        '200':
          description: A JSON array of server trust status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerTrustStatus'
  /status/{serverId}:
    get:
      summary: Return a trust status for given server
      parameters:
      - name: serverId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      response:
        '200':
          description: trust status of the given server
          content:
            application/json:
              schema:
                type: string
                default: unknown
                enum:
                - unknown
                - untrusted
                - trusted
  /report/{serverId}:
    get:
      summary: Return the trust report for the given server
      parameters:
      - name: serverId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      response:
        '200':
          description: A server trust report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerTrustReport'
  /container/{uuid}:
    get:
      summary: Return briefing info for the given container
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      response:
        '200':
          description: The container briefing info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerBriefInfo'
    post:
      summary: create info for a container 
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: container identified by uuid to be registered
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerBriefInfo'
      responses:
        '200':
          description: Given container registered
          content: {}
      security:
      - servermgt_auth:
        - write:servers
    put:
      summary: put a container into given status
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: container identified by uuid to be put into given status
        content:
          application/json:
            schema:
              registered:
                type: boolean
                default: false
      responses:
        '200':
          description: Given container registry status updated
          content: {}
      security:
      - servermgt_auth:
        - write:servers
  /container/basevalue/{uuid}:
    get:
      summary: Return the base value of a given container
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      response:
        '200':
          description: the base value info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerBaseValue'
    put:
      summary: create/update the base value of the given container
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: the base value info to be set for given container
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerBaseValue'
      responses:
        '200':
          description: the base value of given container updated
          content: {}
      security:
      - servermgt_auth:
        - write:servers
  /container/status:
    get:
      summary: Return a list of trust status for all containers
      response:
        '200':
          description: A JSON array of container trust status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContainerTrustStatus'
  /container/status/{uuid}:
    get:
      summary: Return a trust status for given container
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      response:
        '200':
          description: trust status of the given container
          content:
            application/json:
              schema:
                type: string
                default: unknown
                enum:
                - unnkown
                - untrusted
                - trusted
      security:
      - servermgt_auth:
        - read:servers
  /device/{id}:
    get:
      summary: Return briefing info for the given device
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      response:
        '200':
          description: The device briefing info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceBriefInfo'
    post:
      summary: create info for a device 
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: device identified by id to be registered
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceBriefInfo'
      responses:
        '200':
          description: Given device registered
          content: {}
      security:
      - servermgt_auth:
        - write:servers
    put:
      summary: put a device into given status
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: device identified by id to be put into given status
        content:
          application/json:
            schema:
              registered:
                type: boolean
                default: false
      responses:
        '200':
          description: Given device registry status updated
          content: {}
      security:
      - servermgt_auth:
        - write:servers
  /device/basevalue/{id}:
    get:
      summary: Return the base value of a given device
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      response:
        '200':
          description: the base value info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceBaseValue'
    put:
      summary: create/update the base value of the given device
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: the base value info to be set for given device
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceBaseValue'
      responses:
        '200':
          description: the base value of given device updated
          content: {}
      security:
      - servermgt_auth:
        - write:servers
  /device/status:
    get:
      summary: Return a list of trust status for all devices
      response:
        '200':
          description: A JSON array of device trust status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceTrustStatus'
  /device/status/{id}:
    get:
      summary: Return a trust status for given device
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      response:
        '200':
          description: trust status of the given deviceqqqqq
          content:
            application/json:
              schema:
                type: string
                default: unknown
                enum:
                - unknown
                - untrusted
                - trusted

components:
  schemas:
    ConfigItem:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    ServerBriefInfo:
      type: object
      properties:
        clientid:
          type: integer
          format: int64
        ip:
          type: string
        registered:
          type: boolean
          default: false
    ServerRegistryStatus:
      type: object
      properties:
        registered:
          type: boolean
          default: false
        clientids:
          type: array
          items:
            type: integer
            format: int64
    TrustStatus:
      type: string
      default: unknown
      enum:
      - unknown
      - untrusted
      - trusted
    ServerTrustStatus:
      type: object
      properties:
        clientid:
          type: integer
          format: int64
        status:
          $ref: '#/components/schemas/TrustStatus'
    ServerTrustReport:
      type: object
      properties:
        clientid:
          type: integer
          format: int64
        report:
          type: object
          properties:
            pcrvalues:
              type: array
              items:
                $ref: '#/components/schemas/PcrValue'
            manifest:
              type: string
            quote:
              type: string
    ServerBaseValue:
      type: object
      properties:
        pcrvalues:
          type: array
          items:
            $ref: '#/components/schemas/PcrValue'
        measurements:
          type: array
          items:
            $ref: '#/components/schemas/Measurement'
    PcrValue:
      type: object
      properties:
        index:
          type: integer
          maximum: 23
          minimum: 0
        value:
          type: string
    Measurement:
      type: object
      properties:
        type:
          type: string
          default: ima
          enum:
          - bios
          - ima
        name:
          type: string
        value:
          type: string
    ContainerBriefInfo:
      type: object
      properties:
        uuid:
          type: string
        serverid:
          type: integer
          format: int64
        registered:
          type: boolean
          default: false
    ContainerBaseValue:
      type: object
      properties:
        measurements:
          type: array
          items:
            $ref: '#/components/schemas/Measurement'
    ContainerTrustStatus:
      type: object
      properties:
        uuid:
          type: string
        status:
          $ref: '#/components/schemas/TrustStatus'
    DeviceBriefInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        serverid:
          type: integer
          format: int64
        registered:
          type: boolean
          default: false
    DeviceBaseValue:
      type: object
      properties:
        measurements:
          type: array
          items:
            $ref: '#/components/schemas/Measurement'
    DeviceTrustStatus:
      type: object
      properties:
        id:
          type: integer
          format: int64
        status:
          $ref: '#/components/schemas/TrustStatus'
  securitySchemes:
    servermgt_auth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: http://localhost:5096/authorization
          tokenUrl: http://localhost:5096/token
          scopes:
            write:servers: modify target server configurations
            read:servers: read server informations
            write:config: modify ras configuration
